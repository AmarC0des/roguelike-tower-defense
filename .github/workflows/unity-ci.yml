name: Actions ðŸ˜Ž

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]

jobs:
  build:
    name: Build my project âœ¨
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Clear Unity Cache (Manual)
      - name: Clear Unity Cache
        run: |
          rm -rf ~/.cache/unity3d
          rm -rf ~/.config/unity3d
          rm -rf ~/.local/share/unity3d

      # Setup Unity License
      - name: Setup Unity License
        run: |
          echo "${{ secrets.UNITY_LICENSE }}" > UnityLicense.ulf
          mkdir -p ~/.local/share/unity3d/Unity/
          mv UnityLicense.ulf ~/.local/share/unity3d/Unity/Unity_lic.ulf

      # Debug License File
      - name: Debug License File
        run: |
          ls -l ~/.local/share/unity3d/Unity/
          cat ~/.local/share/unity3d/Unity/Unity_lic.ulf | head -n 10

      # Set up Unity version
      - name: Set up Unity version
        uses: game-ci/setup-unity@v4
        with:
          unityVersion: 2022.3.56

      # Cache (Disabled)
      - uses: actions/cache@v4
        if: false
      #  with:
      #    path: Library
      #    key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
      #    restore-keys: |
      #      Library-

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ github.token }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows64
          buildsPath: Builds/Windows/
          allowDirtyBuild: true

      # Output
      - name: Upload Windows Build
        uses: actions/upload-artifact@v4
        with:
          name: Windows-Build
          path: Builds/Windows/

