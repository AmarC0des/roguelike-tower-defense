name: Unity CI Workflow

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Activate Unity License (Fixed)
      - name: Activate Unity License
        uses: game-ci/unity-activate@v2
        with:
          unityVersion: 2022.3.56f1
          unityLicense: ${{ secrets.UNITY_LICENSE }}

      # Step 3: Build Unity Project for Windows
      - name: Build Unity Project for Windows
        uses: game-ci/unity-builder@v2
        with:
          projectPath: .
          unityVersion: 2022.3.56f1
          targetPlatform: StandaloneWindows64

      # Step 4: Build Unity Project for macOS
      - name: Build Unity Project for macOS
        uses: game-ci/unity-builder@v2
        with:
          projectPath: .
          unityVersion: 2022.3.56f1
          targetPlatform: StandaloneOSX

      # Step 5: Run Edit Mode Tests
      - name: Run Edit Mode Tests
        run: |
          unity-editor \
            -batchmode -nographics -quit \
            -projectPath . \
            -runTests \
            -testPlatform EditMode \
            -testResults ./test-results-editmode.xml \
            || echo "No Edit Mode tests found."

      # Step 6: Run Play Mode Tests
      - name: Run Play Mode Tests
        run: |
          unity-editor \
            -batchmode -nographics -quit \
            -projectPath . \
            -runTests \
            -testPlatform PlayMode \
            -testResults ./test-results-playmode.xml \
            || echo "No Play Mode tests found."

      # Step 7: Upload Test Results
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            ./test-results-editmode.xml
            ./test-results-playmode.xml

      # Step 8: Zip Builds for Upload
      - name: Zip Windows Build
        run: zip -r WindowsBuild.zip ./Builds/StandaloneWindows64
      - name: Zip macOS Build
        run: zip -r MacOSBuild.zip ./Builds/StandaloneOSX

      # Step 9: Upload Builds to GitHub as Artifacts
      - name: Upload Windows Build
        uses: actions/upload-artifact@v4
        with:
          name: WindowsBuild
          path: ./WindowsBuild.zip
      - name: Upload macOS Build
        uses: actions/upload-artifact@v4
        with:
          name: MacOSBuild
          path: ./MacOSBuild.zip

      # Step 10: Post-Build Actions (Optional Placeholder)
      - name: Cleanup or Notifications
        run: echo "Build and tests completed!"
